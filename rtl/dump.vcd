$date
	Thu Sep 30 16:15:41 2021
$end
$version
	ModelSim Version 10.6d
$end
$timescale
	1ps
$end

$scope module main $end
$var reg 1 ! CLK $end
$var reg 1 " RST $end
$var reg 32 # cycle [31:0] $end
$var reg 1 $ do_vcd $end
$var reg 1 % do_fsdb $end
$var reg 1 & do_fst $end
$var reg 1 ' do_cycles $end
$var reg 2048 ( filename [2048:1] $end

$scope module top $end
$var wire 1 ) CLK $end
$var wire 1 * RST_N $end
$var wire 1 + start_wire$whas $end
$var wire 1 , state_set_pw$whas $end
$var reg 10 - jj_delay_count [9:0] $end
$var wire 1 . jj_delay_count$D_IN [9] $end
$var wire 1 / jj_delay_count$D_IN [8] $end
$var wire 1 0 jj_delay_count$D_IN [7] $end
$var wire 1 1 jj_delay_count$D_IN [6] $end
$var wire 1 2 jj_delay_count$D_IN [5] $end
$var wire 1 3 jj_delay_count$D_IN [4] $end
$var wire 1 4 jj_delay_count$D_IN [3] $end
$var wire 1 5 jj_delay_count$D_IN [2] $end
$var wire 1 6 jj_delay_count$D_IN [1] $end
$var wire 1 7 jj_delay_count$D_IN [0] $end
$var wire 1 8 jj_delay_count$EN $end
$var reg 1 9 running $end
$var wire 1 : running$D_IN $end
$var wire 1 ; running$EN $end
$var reg 1 < start_reg $end
$var wire 1 = start_reg$D_IN $end
$var wire 1 > start_reg$EN $end
$var reg 1 ? start_reg_1 $end
$var wire 1 @ start_reg_1$D_IN $end
$var wire 1 A start_reg_1$EN $end
$var reg 1 B state_can_overlap $end
$var wire 1 C state_can_overlap$D_IN $end
$var wire 1 D state_can_overlap$EN $end
$var reg 1 E state_fired $end
$var wire 1 F state_fired$D_IN $end
$var wire 1 G state_fired$EN $end
$var reg 3 H state_mkFSMstate [2:0] $end
$var reg 3 I state_mkFSMstate$D_IN [2:0] $end
$var wire 1 J state_mkFSMstate$EN $end
$var wire 1 K op_dsp$ax [31] $end
$var wire 1 L op_dsp$ax [30] $end
$var wire 1 M op_dsp$ax [29] $end
$var wire 1 N op_dsp$ax [28] $end
$var wire 1 O op_dsp$ax [27] $end
$var wire 1 P op_dsp$ax [26] $end
$var wire 1 Q op_dsp$ax [25] $end
$var wire 1 R op_dsp$ax [24] $end
$var wire 1 S op_dsp$ax [23] $end
$var wire 1 T op_dsp$ax [22] $end
$var wire 1 U op_dsp$ax [21] $end
$var wire 1 V op_dsp$ax [20] $end
$var wire 1 W op_dsp$ax [19] $end
$var wire 1 X op_dsp$ax [18] $end
$var wire 1 Y op_dsp$ax [17] $end
$var wire 1 Z op_dsp$ax [16] $end
$var wire 1 [ op_dsp$ax [15] $end
$var wire 1 \ op_dsp$ax [14] $end
$var wire 1 ] op_dsp$ax [13] $end
$var wire 1 ^ op_dsp$ax [12] $end
$var wire 1 _ op_dsp$ax [11] $end
$var wire 1 ` op_dsp$ax [10] $end
$var wire 1 a op_dsp$ax [9] $end
$var wire 1 b op_dsp$ax [8] $end
$var wire 1 c op_dsp$ax [7] $end
$var wire 1 d op_dsp$ax [6] $end
$var wire 1 e op_dsp$ax [5] $end
$var wire 1 f op_dsp$ax [4] $end
$var wire 1 g op_dsp$ax [3] $end
$var wire 1 h op_dsp$ax [2] $end
$var wire 1 i op_dsp$ax [1] $end
$var wire 1 j op_dsp$ax [0] $end
$var wire 1 k op_dsp$ay [31] $end
$var wire 1 l op_dsp$ay [30] $end
$var wire 1 m op_dsp$ay [29] $end
$var wire 1 n op_dsp$ay [28] $end
$var wire 1 o op_dsp$ay [27] $end
$var wire 1 p op_dsp$ay [26] $end
$var wire 1 q op_dsp$ay [25] $end
$var wire 1 r op_dsp$ay [24] $end
$var wire 1 s op_dsp$ay [23] $end
$var wire 1 t op_dsp$ay [22] $end
$var wire 1 u op_dsp$ay [21] $end
$var wire 1 v op_dsp$ay [20] $end
$var wire 1 w op_dsp$ay [19] $end
$var wire 1 x op_dsp$ay [18] $end
$var wire 1 y op_dsp$ay [17] $end
$var wire 1 z op_dsp$ay [16] $end
$var wire 1 { op_dsp$ay [15] $end
$var wire 1 | op_dsp$ay [14] $end
$var wire 1 } op_dsp$ay [13] $end
$var wire 1 ~ op_dsp$ay [12] $end
$var wire 1 !! op_dsp$ay [11] $end
$var wire 1 "! op_dsp$ay [10] $end
$var wire 1 #! op_dsp$ay [9] $end
$var wire 1 $! op_dsp$ay [8] $end
$var wire 1 %! op_dsp$ay [7] $end
$var wire 1 &! op_dsp$ay [6] $end
$var wire 1 '! op_dsp$ay [5] $end
$var wire 1 (! op_dsp$ay [4] $end
$var wire 1 )! op_dsp$ay [3] $end
$var wire 1 *! op_dsp$ay [2] $end
$var wire 1 +! op_dsp$ay [1] $end
$var wire 1 ,! op_dsp$ay [0] $end
$var wire 1 -! op_dsp$az [31] $end
$var wire 1 .! op_dsp$az [30] $end
$var wire 1 /! op_dsp$az [29] $end
$var wire 1 0! op_dsp$az [28] $end
$var wire 1 1! op_dsp$az [27] $end
$var wire 1 2! op_dsp$az [26] $end
$var wire 1 3! op_dsp$az [25] $end
$var wire 1 4! op_dsp$az [24] $end
$var wire 1 5! op_dsp$az [23] $end
$var wire 1 6! op_dsp$az [22] $end
$var wire 1 7! op_dsp$az [21] $end
$var wire 1 8! op_dsp$az [20] $end
$var wire 1 9! op_dsp$az [19] $end
$var wire 1 :! op_dsp$az [18] $end
$var wire 1 ;! op_dsp$az [17] $end
$var wire 1 <! op_dsp$az [16] $end
$var wire 1 =! op_dsp$az [15] $end
$var wire 1 >! op_dsp$az [14] $end
$var wire 1 ?! op_dsp$az [13] $end
$var wire 1 @! op_dsp$az [12] $end
$var wire 1 A! op_dsp$az [11] $end
$var wire 1 B! op_dsp$az [10] $end
$var wire 1 C! op_dsp$az [9] $end
$var wire 1 D! op_dsp$az [8] $end
$var wire 1 E! op_dsp$az [7] $end
$var wire 1 F! op_dsp$az [6] $end
$var wire 1 G! op_dsp$az [5] $end
$var wire 1 H! op_dsp$az [4] $end
$var wire 1 I! op_dsp$az [3] $end
$var wire 1 J! op_dsp$az [2] $end
$var wire 1 K! op_dsp$az [1] $end
$var wire 1 L! op_dsp$az [0] $end
$var wire 1 M! op_dsp$chainin [31] $end
$var wire 1 N! op_dsp$chainin [30] $end
$var wire 1 O! op_dsp$chainin [29] $end
$var wire 1 P! op_dsp$chainin [28] $end
$var wire 1 Q! op_dsp$chainin [27] $end
$var wire 1 R! op_dsp$chainin [26] $end
$var wire 1 S! op_dsp$chainin [25] $end
$var wire 1 T! op_dsp$chainin [24] $end
$var wire 1 U! op_dsp$chainin [23] $end
$var wire 1 V! op_dsp$chainin [22] $end
$var wire 1 W! op_dsp$chainin [21] $end
$var wire 1 X! op_dsp$chainin [20] $end
$var wire 1 Y! op_dsp$chainin [19] $end
$var wire 1 Z! op_dsp$chainin [18] $end
$var wire 1 [! op_dsp$chainin [17] $end
$var wire 1 \! op_dsp$chainin [16] $end
$var wire 1 ]! op_dsp$chainin [15] $end
$var wire 1 ^! op_dsp$chainin [14] $end
$var wire 1 _! op_dsp$chainin [13] $end
$var wire 1 `! op_dsp$chainin [12] $end
$var wire 1 a! op_dsp$chainin [11] $end
$var wire 1 b! op_dsp$chainin [10] $end
$var wire 1 c! op_dsp$chainin [9] $end
$var wire 1 d! op_dsp$chainin [8] $end
$var wire 1 e! op_dsp$chainin [7] $end
$var wire 1 f! op_dsp$chainin [6] $end
$var wire 1 g! op_dsp$chainin [5] $end
$var wire 1 h! op_dsp$chainin [4] $end
$var wire 1 i! op_dsp$chainin [3] $end
$var wire 1 j! op_dsp$chainin [2] $end
$var wire 1 k! op_dsp$chainin [1] $end
$var wire 1 l! op_dsp$chainin [0] $end
$var wire 1 m! op_dsp$ena [2] $end
$var wire 1 n! op_dsp$ena [1] $end
$var wire 1 o! op_dsp$ena [0] $end
$var wire 1 p! op_dsp_rstP$RESET_OUT $end
$var wire 1 q! WILL_FIRE_RL_action_l266c5 $end
$var wire 1 r! WILL_FIRE_RL_action_np $end
$var wire 1 s! WILL_FIRE_RL_fsm_start $end
$var wire 1 t! WILL_FIRE_RL_idle_l264c3 $end
$var wire 1 u! WILL_FIRE_RL_idle_l264c3_1 $end
$var wire 1 v! MUX_jj_delay_count$write_1__VAL_1 [9] $end
$var wire 1 w! MUX_jj_delay_count$write_1__VAL_1 [8] $end
$var wire 1 x! MUX_jj_delay_count$write_1__VAL_1 [7] $end
$var wire 1 y! MUX_jj_delay_count$write_1__VAL_1 [6] $end
$var wire 1 z! MUX_jj_delay_count$write_1__VAL_1 [5] $end
$var wire 1 {! MUX_jj_delay_count$write_1__VAL_1 [4] $end
$var wire 1 |! MUX_jj_delay_count$write_1__VAL_1 [3] $end
$var wire 1 }! MUX_jj_delay_count$write_1__VAL_1 [2] $end
$var wire 1 ~! MUX_jj_delay_count$write_1__VAL_1 [1] $end
$var wire 1 !" MUX_jj_delay_count$write_1__VAL_1 [0] $end
$var wire 1 "" MUX_start_reg$write_1__SEL_2 $end
$var wire 1 #" MUX_state_mkFSMstate$write_1__SEL_1 $end
$var wire 1 $" abort_whas__9_AND_abort_wget__0_1_OR_state_mkF_ETC___d82 $end

$scope module op_dsp $end
$var parameter 32 %" accum_2nd_pipeline_clock $end
$var parameter 32 &" accum_adder_clock $end
$var parameter 32 '" accum_pipeline_clock $end
$var parameter 32 (" accumulate_clock $end
$var parameter 8 )" adder_input_clock $end
$var parameter 40 *" adder_subtract $end
$var parameter 32 +" ax_chainin_2nd_pl_clock $end
$var parameter 32 ," ax_chainin_pl_clock $end
$var parameter 8 -" ax_clock $end
$var parameter 8 ." ay_clock $end
$var parameter 32 /" az_clock $end
$var parameter 32 0" clear_type $end
$var parameter 32 1" mult_2nd_pipeline_clock $end
$var parameter 32 2" mult_pipeline_clock $end
$var parameter 56 3" operation_mode $end
$var parameter 8 4" output_clock $end
$var parameter 40 5" use_chainin $end
$var parameter 120 6" lpm_type $end
$var wire 1 p! clr_0 $end
$var wire 1 p! clr_1 $end
$var wire 1 ) clk_0 $end
$var wire 1 ) clk_1 $end
$var wire 1 ) clk_2 $end
$var wire 1 m! ena [2] $end
$var wire 1 n! ena [1] $end
$var wire 1 o! ena [0] $end
$var wire 1 K ax [31] $end
$var wire 1 L ax [30] $end
$var wire 1 M ax [29] $end
$var wire 1 N ax [28] $end
$var wire 1 O ax [27] $end
$var wire 1 P ax [26] $end
$var wire 1 Q ax [25] $end
$var wire 1 R ax [24] $end
$var wire 1 S ax [23] $end
$var wire 1 T ax [22] $end
$var wire 1 U ax [21] $end
$var wire 1 V ax [20] $end
$var wire 1 W ax [19] $end
$var wire 1 X ax [18] $end
$var wire 1 Y ax [17] $end
$var wire 1 Z ax [16] $end
$var wire 1 [ ax [15] $end
$var wire 1 \ ax [14] $end
$var wire 1 ] ax [13] $end
$var wire 1 ^ ax [12] $end
$var wire 1 _ ax [11] $end
$var wire 1 ` ax [10] $end
$var wire 1 a ax [9] $end
$var wire 1 b ax [8] $end
$var wire 1 c ax [7] $end
$var wire 1 d ax [6] $end
$var wire 1 e ax [5] $end
$var wire 1 f ax [4] $end
$var wire 1 g ax [3] $end
$var wire 1 h ax [2] $end
$var wire 1 i ax [1] $end
$var wire 1 j ax [0] $end
$var wire 1 k ay [31] $end
$var wire 1 l ay [30] $end
$var wire 1 m ay [29] $end
$var wire 1 n ay [28] $end
$var wire 1 o ay [27] $end
$var wire 1 p ay [26] $end
$var wire 1 q ay [25] $end
$var wire 1 r ay [24] $end
$var wire 1 s ay [23] $end
$var wire 1 t ay [22] $end
$var wire 1 u ay [21] $end
$var wire 1 v ay [20] $end
$var wire 1 w ay [19] $end
$var wire 1 x ay [18] $end
$var wire 1 y ay [17] $end
$var wire 1 z ay [16] $end
$var wire 1 { ay [15] $end
$var wire 1 | ay [14] $end
$var wire 1 } ay [13] $end
$var wire 1 ~ ay [12] $end
$var wire 1 !! ay [11] $end
$var wire 1 "! ay [10] $end
$var wire 1 #! ay [9] $end
$var wire 1 $! ay [8] $end
$var wire 1 %! ay [7] $end
$var wire 1 &! ay [6] $end
$var wire 1 '! ay [5] $end
$var wire 1 (! ay [4] $end
$var wire 1 )! ay [3] $end
$var wire 1 *! ay [2] $end
$var wire 1 +! ay [1] $end
$var wire 1 ,! ay [0] $end
$var wire 1 7" accumulate $end
$var wire 1 M! chainin [31] $end
$var wire 1 N! chainin [30] $end
$var wire 1 O! chainin [29] $end
$var wire 1 P! chainin [28] $end
$var wire 1 Q! chainin [27] $end
$var wire 1 R! chainin [26] $end
$var wire 1 S! chainin [25] $end
$var wire 1 T! chainin [24] $end
$var wire 1 U! chainin [23] $end
$var wire 1 V! chainin [22] $end
$var wire 1 W! chainin [21] $end
$var wire 1 X! chainin [20] $end
$var wire 1 Y! chainin [19] $end
$var wire 1 Z! chainin [18] $end
$var wire 1 [! chainin [17] $end
$var wire 1 \! chainin [16] $end
$var wire 1 ]! chainin [15] $end
$var wire 1 ^! chainin [14] $end
$var wire 1 _! chainin [13] $end
$var wire 1 `! chainin [12] $end
$var wire 1 a! chainin [11] $end
$var wire 1 b! chainin [10] $end
$var wire 1 c! chainin [9] $end
$var wire 1 d! chainin [8] $end
$var wire 1 e! chainin [7] $end
$var wire 1 f! chainin [6] $end
$var wire 1 g! chainin [5] $end
$var wire 1 h! chainin [4] $end
$var wire 1 i! chainin [3] $end
$var wire 1 j! chainin [2] $end
$var wire 1 k! chainin [1] $end
$var wire 1 l! chainin [0] $end
$var wire 1 -! az [31] $end
$var wire 1 .! az [30] $end
$var wire 1 /! az [29] $end
$var wire 1 0! az [28] $end
$var wire 1 1! az [27] $end
$var wire 1 2! az [26] $end
$var wire 1 3! az [25] $end
$var wire 1 4! az [24] $end
$var wire 1 5! az [23] $end
$var wire 1 6! az [22] $end
$var wire 1 7! az [21] $end
$var wire 1 8! az [20] $end
$var wire 1 9! az [19] $end
$var wire 1 :! az [18] $end
$var wire 1 ;! az [17] $end
$var wire 1 <! az [16] $end
$var wire 1 =! az [15] $end
$var wire 1 >! az [14] $end
$var wire 1 ?! az [13] $end
$var wire 1 @! az [12] $end
$var wire 1 A! az [11] $end
$var wire 1 B! az [10] $end
$var wire 1 C! az [9] $end
$var wire 1 D! az [8] $end
$var wire 1 E! az [7] $end
$var wire 1 F! az [6] $end
$var wire 1 G! az [5] $end
$var wire 1 H! az [4] $end
$var wire 1 I! az [3] $end
$var wire 1 J! az [2] $end
$var wire 1 K! az [1] $end
$var wire 1 L! az [0] $end
$var wire 1 8" dfxlfsrena $end
$var wire 1 9" dfxmisrena $end
$var wire 1 :" resulta [31] $end
$var wire 1 ;" resulta [30] $end
$var wire 1 <" resulta [29] $end
$var wire 1 =" resulta [28] $end
$var wire 1 >" resulta [27] $end
$var wire 1 ?" resulta [26] $end
$var wire 1 @" resulta [25] $end
$var wire 1 A" resulta [24] $end
$var wire 1 B" resulta [23] $end
$var wire 1 C" resulta [22] $end
$var wire 1 D" resulta [21] $end
$var wire 1 E" resulta [20] $end
$var wire 1 F" resulta [19] $end
$var wire 1 G" resulta [18] $end
$var wire 1 H" resulta [17] $end
$var wire 1 I" resulta [16] $end
$var wire 1 J" resulta [15] $end
$var wire 1 K" resulta [14] $end
$var wire 1 L" resulta [13] $end
$var wire 1 M" resulta [12] $end
$var wire 1 N" resulta [11] $end
$var wire 1 O" resulta [10] $end
$var wire 1 P" resulta [9] $end
$var wire 1 Q" resulta [8] $end
$var wire 1 R" resulta [7] $end
$var wire 1 S" resulta [6] $end
$var wire 1 T" resulta [5] $end
$var wire 1 U" resulta [4] $end
$var wire 1 V" resulta [3] $end
$var wire 1 W" resulta [2] $end
$var wire 1 X" resulta [1] $end
$var wire 1 Y" resulta [0] $end
$var wire 1 Z" chainout [31] $end
$var wire 1 [" chainout [30] $end
$var wire 1 \" chainout [29] $end
$var wire 1 ]" chainout [28] $end
$var wire 1 ^" chainout [27] $end
$var wire 1 _" chainout [26] $end
$var wire 1 `" chainout [25] $end
$var wire 1 a" chainout [24] $end
$var wire 1 b" chainout [23] $end
$var wire 1 c" chainout [22] $end
$var wire 1 d" chainout [21] $end
$var wire 1 e" chainout [20] $end
$var wire 1 f" chainout [19] $end
$var wire 1 g" chainout [18] $end
$var wire 1 h" chainout [17] $end
$var wire 1 i" chainout [16] $end
$var wire 1 j" chainout [15] $end
$var wire 1 k" chainout [14] $end
$var wire 1 l" chainout [13] $end
$var wire 1 m" chainout [12] $end
$var wire 1 n" chainout [11] $end
$var wire 1 o" chainout [10] $end
$var wire 1 p" chainout [9] $end
$var wire 1 q" chainout [8] $end
$var wire 1 r" chainout [7] $end
$var wire 1 s" chainout [6] $end
$var wire 1 t" chainout [5] $end
$var wire 1 u" chainout [4] $end
$var wire 1 v" chainout [3] $end
$var wire 1 w" chainout [2] $end
$var wire 1 x" chainout [1] $end
$var wire 1 y" chainout [0] $end
$var wire 1 z" adder_inexact $end
$var wire 1 {" adder_invalid $end
$var wire 1 |" adder_overflow $end
$var wire 1 }" adder_underflow $end
$var wire 1 ~" mult_inexact $end
$var wire 1 !# mult_invalid $end
$var wire 1 "# mult_overflow $end
$var wire 1 ## mult_underflow $end
$var wire 1 $# dftout $end

$scope module fp_mac_instance $end
$var parameter 32 %# accum_2nd_pipeline_clock $end
$var parameter 32 &# accum_adder_clock $end
$var parameter 32 '# accum_pipeline_clock $end
$var parameter 32 (# accumulate_clock $end
$var parameter 8 )# adder_input_clock $end
$var parameter 40 *# adder_subtract $end
$var parameter 32 +# ax_chainin_2nd_pl_clock $end
$var parameter 32 ,# ax_chainin_pl_clock $end
$var parameter 8 -# ax_clock $end
$var parameter 8 .# ay_clock $end
$var parameter 32 /# az_clock $end
$var parameter 32 0# clear_type $end
$var parameter 32 1# mult_2nd_pipeline_clock $end
$var parameter 32 2# mult_pipeline_clock $end
$var parameter 56 3# operation_mode $end
$var parameter 8 4# output_clock $end
$var parameter 40 5# use_chainin $end
$var parameter 120 6# lpm_type $end
$var wire 1 p! clr [1] $end
$var wire 1 p! clr [0] $end
$var wire 1 ) clk [2] $end
$var wire 1 ) clk [1] $end
$var wire 1 ) clk [0] $end
$var wire 1 m! ena [2] $end
$var wire 1 n! ena [1] $end
$var wire 1 o! ena [0] $end
$var wire 1 K ax [31] $end
$var wire 1 L ax [30] $end
$var wire 1 M ax [29] $end
$var wire 1 N ax [28] $end
$var wire 1 O ax [27] $end
$var wire 1 P ax [26] $end
$var wire 1 Q ax [25] $end
$var wire 1 R ax [24] $end
$var wire 1 S ax [23] $end
$var wire 1 T ax [22] $end
$var wire 1 U ax [21] $end
$var wire 1 V ax [20] $end
$var wire 1 W ax [19] $end
$var wire 1 X ax [18] $end
$var wire 1 Y ax [17] $end
$var wire 1 Z ax [16] $end
$var wire 1 [ ax [15] $end
$var wire 1 \ ax [14] $end
$var wire 1 ] ax [13] $end
$var wire 1 ^ ax [12] $end
$var wire 1 _ ax [11] $end
$var wire 1 ` ax [10] $end
$var wire 1 a ax [9] $end
$var wire 1 b ax [8] $end
$var wire 1 c ax [7] $end
$var wire 1 d ax [6] $end
$var wire 1 e ax [5] $end
$var wire 1 f ax [4] $end
$var wire 1 g ax [3] $end
$var wire 1 h ax [2] $end
$var wire 1 i ax [1] $end
$var wire 1 j ax [0] $end
$var wire 1 k ay [31] $end
$var wire 1 l ay [30] $end
$var wire 1 m ay [29] $end
$var wire 1 n ay [28] $end
$var wire 1 o ay [27] $end
$var wire 1 p ay [26] $end
$var wire 1 q ay [25] $end
$var wire 1 r ay [24] $end
$var wire 1 s ay [23] $end
$var wire 1 t ay [22] $end
$var wire 1 u ay [21] $end
$var wire 1 v ay [20] $end
$var wire 1 w ay [19] $end
$var wire 1 x ay [18] $end
$var wire 1 y ay [17] $end
$var wire 1 z ay [16] $end
$var wire 1 { ay [15] $end
$var wire 1 | ay [14] $end
$var wire 1 } ay [13] $end
$var wire 1 ~ ay [12] $end
$var wire 1 !! ay [11] $end
$var wire 1 "! ay [10] $end
$var wire 1 #! ay [9] $end
$var wire 1 $! ay [8] $end
$var wire 1 %! ay [7] $end
$var wire 1 &! ay [6] $end
$var wire 1 '! ay [5] $end
$var wire 1 (! ay [4] $end
$var wire 1 )! ay [3] $end
$var wire 1 *! ay [2] $end
$var wire 1 +! ay [1] $end
$var wire 1 ,! ay [0] $end
$var wire 1 7" accumulate $end
$var wire 1 M! chainin [31] $end
$var wire 1 N! chainin [30] $end
$var wire 1 O! chainin [29] $end
$var wire 1 P! chainin [28] $end
$var wire 1 Q! chainin [27] $end
$var wire 1 R! chainin [26] $end
$var wire 1 S! chainin [25] $end
$var wire 1 T! chainin [24] $end
$var wire 1 U! chainin [23] $end
$var wire 1 V! chainin [22] $end
$var wire 1 W! chainin [21] $end
$var wire 1 X! chainin [20] $end
$var wire 1 Y! chainin [19] $end
$var wire 1 Z! chainin [18] $end
$var wire 1 [! chainin [17] $end
$var wire 1 \! chainin [16] $end
$var wire 1 ]! chainin [15] $end
$var wire 1 ^! chainin [14] $end
$var wire 1 _! chainin [13] $end
$var wire 1 `! chainin [12] $end
$var wire 1 a! chainin [11] $end
$var wire 1 b! chainin [10] $end
$var wire 1 c! chainin [9] $end
$var wire 1 d! chainin [8] $end
$var wire 1 e! chainin [7] $end
$var wire 1 f! chainin [6] $end
$var wire 1 g! chainin [5] $end
$var wire 1 h! chainin [4] $end
$var wire 1 i! chainin [3] $end
$var wire 1 j! chainin [2] $end
$var wire 1 k! chainin [1] $end
$var wire 1 l! chainin [0] $end
$var wire 1 -! az [31] $end
$var wire 1 .! az [30] $end
$var wire 1 /! az [29] $end
$var wire 1 0! az [28] $end
$var wire 1 1! az [27] $end
$var wire 1 2! az [26] $end
$var wire 1 3! az [25] $end
$var wire 1 4! az [24] $end
$var wire 1 5! az [23] $end
$var wire 1 6! az [22] $end
$var wire 1 7! az [21] $end
$var wire 1 8! az [20] $end
$var wire 1 9! az [19] $end
$var wire 1 :! az [18] $end
$var wire 1 ;! az [17] $end
$var wire 1 <! az [16] $end
$var wire 1 =! az [15] $end
$var wire 1 >! az [14] $end
$var wire 1 ?! az [13] $end
$var wire 1 @! az [12] $end
$var wire 1 A! az [11] $end
$var wire 1 B! az [10] $end
$var wire 1 C! az [9] $end
$var wire 1 D! az [8] $end
$var wire 1 E! az [7] $end
$var wire 1 F! az [6] $end
$var wire 1 G! az [5] $end
$var wire 1 H! az [4] $end
$var wire 1 I! az [3] $end
$var wire 1 J! az [2] $end
$var wire 1 K! az [1] $end
$var wire 1 L! az [0] $end
$var wire 1 8" dfxlfsrena $end
$var wire 1 9" dfxmisrena $end
$var wire 1 :" resulta [31] $end
$var wire 1 ;" resulta [30] $end
$var wire 1 <" resulta [29] $end
$var wire 1 =" resulta [28] $end
$var wire 1 >" resulta [27] $end
$var wire 1 ?" resulta [26] $end
$var wire 1 @" resulta [25] $end
$var wire 1 A" resulta [24] $end
$var wire 1 B" resulta [23] $end
$var wire 1 C" resulta [22] $end
$var wire 1 D" resulta [21] $end
$var wire 1 E" resulta [20] $end
$var wire 1 F" resulta [19] $end
$var wire 1 G" resulta [18] $end
$var wire 1 H" resulta [17] $end
$var wire 1 I" resulta [16] $end
$var wire 1 J" resulta [15] $end
$var wire 1 K" resulta [14] $end
$var wire 1 L" resulta [13] $end
$var wire 1 M" resulta [12] $end
$var wire 1 N" resulta [11] $end
$var wire 1 O" resulta [10] $end
$var wire 1 P" resulta [9] $end
$var wire 1 Q" resulta [8] $end
$var wire 1 R" resulta [7] $end
$var wire 1 S" resulta [6] $end
$var wire 1 T" resulta [5] $end
$var wire 1 U" resulta [4] $end
$var wire 1 V" resulta [3] $end
$var wire 1 W" resulta [2] $end
$var wire 1 X" resulta [1] $end
$var wire 1 Y" resulta [0] $end
$var wire 1 Z" chainout [31] $end
$var wire 1 [" chainout [30] $end
$var wire 1 \" chainout [29] $end
$var wire 1 ]" chainout [28] $end
$var wire 1 ^" chainout [27] $end
$var wire 1 _" chainout [26] $end
$var wire 1 `" chainout [25] $end
$var wire 1 a" chainout [24] $end
$var wire 1 b" chainout [23] $end
$var wire 1 c" chainout [22] $end
$var wire 1 d" chainout [21] $end
$var wire 1 e" chainout [20] $end
$var wire 1 f" chainout [19] $end
$var wire 1 g" chainout [18] $end
$var wire 1 h" chainout [17] $end
$var wire 1 i" chainout [16] $end
$var wire 1 j" chainout [15] $end
$var wire 1 k" chainout [14] $end
$var wire 1 l" chainout [13] $end
$var wire 1 m" chainout [12] $end
$var wire 1 n" chainout [11] $end
$var wire 1 o" chainout [10] $end
$var wire 1 p" chainout [9] $end
$var wire 1 q" chainout [8] $end
$var wire 1 r" chainout [7] $end
$var wire 1 s" chainout [6] $end
$var wire 1 t" chainout [5] $end
$var wire 1 u" chainout [4] $end
$var wire 1 v" chainout [3] $end
$var wire 1 w" chainout [2] $end
$var wire 1 x" chainout [1] $end
$var wire 1 y" chainout [0] $end
$var wire 1 z" adder_inexact $end
$var wire 1 {" adder_invalid $end
$var wire 1 |" adder_overflow $end
$var wire 1 }" adder_underflow $end
$var wire 1 ~" mult_inexact $end
$var wire 1 !# mult_invalid $end
$var wire 1 "# mult_overflow $end
$var wire 1 ## mult_underflow $end
$var wire 1 $# dftout $end
$upscope $end
$upscope $end

$scope module op_dsp_rstP $end
$var wire 1 * RESET_IN $end
$var wire 1 p! RESET_OUT $end
$upscope $end

$scope module op_rstP $end
$var wire 1 * RESET_IN $end
$var wire 1 7# RESET_OUT $end
$upscope $end
$upscope $end
$upscope $end

$scope begin std $end
$upscope $end
$enddefinitions $end
#15000
$dumpvars
0!
1"
b10 #
0$
0%
0&
0'
b1 -
19
1<
0?
1B
0E
b0 H
b1 I
bx (
b1101110011011110110111001100101 %"
b1101110011011110110111001100101 &"
b1101110011011110110111001100101 '"
b1101110011011110110111001100101 ("
b110000 )"
b110011001100001011011000111001101100101 *"
b1101110011011110110111001100101 +"
b1101110011011110110111001100101 ,"
b110000 -"
b110000 ."
b1101110011011110110111001100101 /"
b1110011011000110110110001110010 0"
b1101110011011110110111001100101 1"
b1101110011011110110111001100101 2"
b1110011011100000101111101101101011101010110110001110100 3"
b110000 4"
b110011001100001011011000111001101100101 5"
b11101000111011101100101011011100111010001111001011011100110110101011111011001100111000001011111011011010110000101100011 6"
b1101110011011110110111001100101 %#
b1101110011011110110111001100101 &#
b1101110011011110110111001100101 '#
b1101110011011110110111001100101 (#
b110000 )#
b110011001100001011011000111001101100101 *#
b1101110011011110110111001100101 +#
b1101110011011110110111001100101 ,#
b110000 -#
b110000 .#
b1101110011011110110111001100101 /#
b1110011011000110110110001110010 0#
b1101110011011110110111001100101 1#
b1101110011011110110111001100101 2#
b1110011011100000101111101101101011101010110110001110100 3#
b110000 4#
b110011001100001011011000111001101100101 5#
b11101000111011101100101011011100111010001111001011011100110110101011111011001100111000001011111011011010110000101100011 6#
1+
1,
17
06
05
04
03
02
01
00
0/
0.
08
1:
0;
0=
1>
1@
1A
1C
1D
1F
1G
1J
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0o!
0n!
0m!
0p!
1q!
0r!
1s!
0t!
0u!
0!"
1~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0""
0#"
1$"
1*
0)
z7"
z8"
z9"
zY"
zX"
zW"
zV"
zU"
zT"
zS"
zR"
zQ"
zP"
zO"
zN"
zM"
zL"
zK"
zJ"
zI"
zH"
zG"
zF"
zE"
zD"
zC"
zB"
zA"
z@"
z?"
z>"
z="
z<"
z;"
z:"
zy"
zx"
zw"
zv"
zu"
zt"
zs"
zr"
zq"
zp"
zo"
zn"
zm"
zl"
zk"
zj"
zi"
zh"
zg"
zf"
ze"
zd"
zc"
zb"
za"
z`"
z_"
z^"
z]"
z\"
z["
zZ"
zz"
z{"
z|"
z}"
z~"
z!#
z"#
z##
z$#
07#
$end
#20000
1!
1)
0<
1?
1E
b1 H
0s!
0+
1=
0>
0@
0$"
1d
1\
1&!
1o!
0q!
b10 I
#21000
b11 #
#25000
0!
0)
#30000
1!
1)
0?
b10 H
0d
0\
0&!
0o!
18
b11 I
#31000
b100 #
#35000
0!
0)
#40000
1!
1)
b11 H
0J
08
0,
0F
1r!
1J
18
07
16
1,
1F
b100 I
#41000
b101 #
#45000
0!
0)
#50000
1!
1)
b10 -
b100 H
0~!
1}!
06
15
#51000
b110 #
#55000
0!
0)
#60000
1!
1)
b100 -
0}!
1|!
05
14
#61000
b111 #
#65000
0!
0)
#70000
1!
1)
b1000 -
0|!
1{!
04
13
#71000
b1000 #
#75000
0!
0)
#80000
1!
1)
b10000 -
0{!
1z!
03
12
#81000
b1001 #
#85000
0!
0)
#90000
1!
1)
b100000 -
0z!
1y!
02
11
#91000
b1010 #
#95000
0!
0)
#100000
1!
1)
b1000000 -
0y!
1x!
01
10
#101000
b1011 #
#105000
0!
0)
#110000
1!
1)
b10000000 -
0x!
1w!
00
1/
#111000
b1100 #
#115000
0!
0)
#120000
1!
1)
b100000000 -
0w!
1v!
0/
1.
#121000
b1101 #
#125000
0!
0)
#130000
1!
1)
b1000000000 -
1$"
1u!
0v!
0.
0r!
1#"
08
17
b0 I
#131000
b1110 #
#135000
0!
0)
